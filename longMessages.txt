Navigating the complex world of health and nutrition can be overwhelming, often hindering individuals from taking the first step towards a healthier lifestyle. Despite the desire to improve your well-being, the constant influx of fad diets and trendy supplements can make it difficult to discern reliable information. This website aims to simplify the process by providing a fundamental understanding of nutritional needs, empowering you to make informed decisions on your health journey. **It's important to note that the information provided here is not intended as medical advice and should not replace professional guidance.** Any calculations or suggestions regarding BMI, nutritional intake, or food consumption are based on the U.S. Centers for Disease Control and Prevention's methodologies. However, these estimates are not definitive and may not account for all individual factors influencing physical health.
While exercise is undoubtedly a crucial component of overall health, the focus of this website is on nutrition. To delve deeper into the realm of fitness and exercise, we encourage you to explore reliable resources such as the CDC's physical activity guidelines or consult with a certified fitness professional. These experts can provide personalized advice tailored to your specific needs and goals. However, below we also have a few recommendations for getting started with at-home exercises or being a first timer at the gym. Remember, just getting started is the hardest step but every step, no matter how small, brings you closer to a healthier you!
One of the key things that we focused on in the group, when designing the website, was that the code needed to be easy to read and traverse. We wanted the code to be read as it would like if it was in Java's main function. So instead of having this mess and garble of code that executes linearly, we would have the main functions of the website untouched but the other nitty gritty things relegated to render functions. So, instead of having this bunch of code all together with other unrelated code...
it instead could be read as one line like this. This drastically improves readability, and leaves the actual background part of the code out of sight (for the most part) when handling the frontend.
Similarly, one of the things we tried to avoid when programming the website is having big chunks of code taking up a major part of the screen. What we mean by this is, let's take for example those paragraphs back in the About page or even this page. If we simply input those paragraphs purely into our IDE then our code would be like this...
Just scrolling and scrolling and scrolling, which isn't optimal. So, instead we put our messages into txt files and had them read and stored into an array so that same paragraph can simply be read as...
Lastly, another thing we focused on was having similar code bundled together. So, let's say we are working on the code for our website's home page. We could have simply written our code like this...
But, at a glance, the code becomes an indiscernible block of letters and colors. No one wants to sit around and go line by line to understand what is going on. Most people want to quickly understand what is happening, and what code is related. As a result, we made sure to have related parts together along with comments succinctly explaining their purpose. So, that same block of code was actually implemented like this...
So, in summary, we focused on having **clean** code. We knew that with handling APIs over here, and having calculative functions over there, that what was going to happen in the end was a mess of code that would be hard to track. We needed, if we wanted an enjoyable experience for the both of us, some sort of structure that allowed us to work efficiently and in a way that was understandable to the both of us.